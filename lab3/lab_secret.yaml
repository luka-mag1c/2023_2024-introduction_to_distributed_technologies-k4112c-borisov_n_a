apiVersion: v1
kind: Namespace
metadata:
   name: lab3

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: secret-cm
  namespace: lab3
  labels:
    app: react
data:
  usn: "Borya"
  cpn: "Kvas"

---

apiVersion: apps/v1
kind: ReplicaSet
metadata:
  name: secret-rs
  namespace: lab3
  labels:
    app: react
spec:
  replicas: 2
  selector:
    matchLabels:
      app: react
  template:
    metadata:
      labels:
        app: react
    spec:
      containers:
      - name: front
        image: ifilyaninitmo/itdt-contained-frontend:master
        env:
        - name: REACT_APP_USERNAME
          valueFrom:
              configMapKeyRef:
                name: secret-cm
                key:  usn
        - name: REACT_APP_COMPANY_NAME
          valueFrom:
              configMapKeyRef:
                name: secret-cm
                key: cpn
        ports:
        - containerPort: 3000

---

apiVersion: v1
kind: Service
metadata:
  name: react-service
  namespace: lab3
  labels:
    app: react
spec:
  selector:
    app: react
  ports:
  - protocol: TCP
    port: 8200
    targetPort: 3000
  type: NodePort

---

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ingr-kvass
  namespace: lab3
  labels:
    app: react
spec:
  tls:
  - hosts:
      - kvass.com
    secretName: react-tls
  rules:
   - host: kvass.com
     http:
        paths:
          - pathType: Prefix
            path: /
            backend:
              service:
                name: react-service
                port:
                  number: 8200

---

apiVersion: v1
kind: Secret
metadata:
  name: react-tls
  namespace: lab3
  labels:
    app: react
type: kubernetes.io/tls
stringData:
  tls.crt: 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

  tls.key: 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 



